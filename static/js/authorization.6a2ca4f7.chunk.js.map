{"version":3,"file":"static/js/authorization.6a2ca4f7.chunk.js","mappings":"mMACA,EAA0B,yB,UCIX,SAASA,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACjD,OACE,oBAASC,UAAWC,EAApB,UACE,UAACC,EAAA,EAAD,YACE,eAAIF,UAAWF,EAAW,uBAAyB,eAAnD,SACGD,IAEFE,S,4ECVM,SAASI,EAAcC,GACpC,OAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KAMA,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUC,aAJL,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAChCF,EAASE,O,sJCLb,EAAuB,wBAAvB,EAAuD,yBAAvD,EAA8F,+B,wCCa/E,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAIIV,EAAAA,EAAAA,GAAc,IAHTW,EADT,EACER,MACUS,EAFZ,EAEER,SACcS,EAHhB,EAGER,aAEF,GAIIL,EAAAA,EAAAA,GAAc,IAHTc,EADT,EACEX,MACUY,EAFZ,EAEEX,SACcY,EAHhB,EAGEX,aAEIY,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IASpBC,EAAY,WAChBR,EAAa,IACbG,EAAgB,KAGlB,OACE,UAACtB,EAAA,EAAD,CAASC,MAAM,oCAAoCC,UAAU,EAA7D,WACE,kBAAME,UAAWC,EAAQuB,SAdH,SAAAC,GACxBA,EAAIC,iBAEJd,GAASe,EAAAA,EAAAA,IAAM,CAAEC,MAAOd,EAAWe,SAAUZ,KAC7CM,KAUE,WACE,SAACO,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,KAAK,QACLC,WAAW,EACXnC,UAAWC,EACXQ,MAAOK,EACPsB,SAAUpB,KAEZ,SAACc,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRC,KAAK,WACLG,UAAQ,EACRrC,UAAWC,EACXQ,MAAOQ,EACPmB,SAAUjB,KAEZ,SAACmB,EAAA,EAAD,CACEL,QAAQ,YACRC,KAAK,SACLK,UAAWzB,GAAaG,EAAauB,OAAS,EAC9CxC,UAAWC,EACXwC,SAAS,SAACC,EAAA,EAAD,IALX,uBAUDtB,IACC,SAACuB,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,QACPC,OAAQ,YACRC,UAAW,EACXC,gBAAiB,QAEnBC,QAAS,EAPX,UASE,SAACC,EAAA,EAAD,CACEC,SAAS,QACTlB,QAAQ,WACRmB,QAASC,YAAW,WAClBzC,GAAS0C,EAAAA,EAAAA,QACR,KACHC,QACE,SAACjB,EAAA,EAAD,CACEkB,MAAM,UACNC,KAAK,QACLC,QAAS,WACP9C,GAAS0C,EAAAA,EAAAA,OAJb,mBAPJ,SAkBGlC","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","hooks/useFormFields.js","webpack://goit-react-hw-08-phonebook/./src/views/LogInView/LogInView.module.css?d6ee","views/LogInView/LogInView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Ku9xr\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container';\nimport s from './Section.module.css';\n\nexport default function Section({ title, isHidden, children }) {\n  return (\n    <section className={s.section}>\n      <Container>\n        <h1 className={isHidden ? 'sectionTitleIsHidden' : 'sectionTitle'}>\n          {title}\n        </h1>\n        {children}\n      </Container>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  isHidden: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useFormFields(initialVal) {\n  const [state, setState] = useState(initialVal);\n\n  const handleChange = ({ target: { value } }) => {\n    setState(value);\n  };\n\n  return { state, setState, handleChange };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LogInView_form__ndaM8\",\"input\":\"LogInView_input__HDltJ\",\"registerBtn\":\"LogInView_registerBtn__YP5XG\"};","import { useDispatch, useSelector } from 'react-redux';\r\nimport { TextField } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport Section from 'components/Section';\r\nimport useFormFields from 'hooks/useFormFields';\r\nimport { logIn } from 'redux/auth/authOperations';\r\nimport { getError } from 'redux/auth/authSelectors';\r\nimport s from './LogInView.module.css';\r\n\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport { resetError } from 'redux/auth/authActions';\r\n\r\nexport default function LogInView() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    state: userEmail,\r\n    setState: setUserEmail,\r\n    handleChange: handleUserEmailChange,\r\n  } = useFormFields('');\r\n  const {\r\n    state: userPassword,\r\n    setState: setUserPassword,\r\n    handleChange: handleUserPasswordChange,\r\n  } = useFormFields('');\r\n  const error = useSelector(getError);\r\n\r\n  const handleLogInSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    dispatch(logIn({ email: userEmail, password: userPassword }));\r\n    formReset();\r\n  };\r\n\r\n  const formReset = () => {\r\n    setUserEmail('');\r\n    setUserPassword('');\r\n  };\r\n\r\n  return (\r\n    <Section title=\"Please sign in to access the site\" isHidden={false}>\r\n      <form className={s.form} onSubmit={handleLogInSubmit}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Email:\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          autoFocus={true}\r\n          className={s.input}\r\n          value={userEmail}\r\n          onChange={handleUserEmailChange}\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Password:\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          required\r\n          className={s.input}\r\n          value={userPassword}\r\n          onChange={handleUserPasswordChange}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          disabled={!userEmail || userPassword.length < 7 ? true : false}\r\n          className={s.registerBtn}\r\n          endIcon={<SendIcon />}\r\n        >\r\n          Log In\r\n        </Button>\r\n      </form>\r\n      {error && (\r\n        <Stack\r\n          sx={{\r\n            width: '400px',\r\n            margin: '10px auto',\r\n            boxShadow: 8,\r\n            backgroundColor: '#fff',\r\n          }}\r\n          spacing={2}\r\n        >\r\n          <Alert\r\n            severity=\"error\"\r\n            variant=\"outlined\"\r\n            onClose={setTimeout(() => {\r\n              dispatch(resetError());\r\n            }, 2000)}\r\n            action={\r\n              <Button\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  dispatch(resetError());\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n            }\r\n          >\r\n            {error}\r\n          </Alert>\r\n        </Stack>\r\n      )}\r\n    </Section>\r\n  );\r\n}\r\n"],"names":["Section","title","isHidden","children","className","s","Container","useFormFields","initialVal","useState","state","setState","handleChange","value","target","LogInView","dispatch","useDispatch","userEmail","setUserEmail","handleUserEmailChange","userPassword","setUserPassword","handleUserPasswordChange","error","useSelector","getError","formReset","onSubmit","evt","preventDefault","logIn","email","password","TextField","id","label","variant","type","autoFocus","onChange","required","Button","disabled","length","endIcon","Send","Stack","sx","width","margin","boxShadow","backgroundColor","spacing","Alert","severity","onClose","setTimeout","resetError","action","color","size","onClick"],"sourceRoot":""}