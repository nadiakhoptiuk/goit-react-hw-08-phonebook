{"version":3,"file":"static/js/authorization.97f74293.chunk.js","mappings":"yLACA,EAA4B,6B,UCEb,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,gBAAKC,UAAWC,EAAhB,SAA8BF,ICHvC,MAA0B,yBCIX,SAASG,EAAT,GAAiD,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,SACjD,OACE,oBAASC,UAAWC,EAApB,UACE,UAACH,EAAD,YACE,eAAIE,UAAWI,EAAW,uBAAyB,eAAnD,SACGD,IAEFJ,S,4ECVM,SAASM,EAAcC,GACpC,OAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KAMA,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUC,aAJL,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAChCF,EAASE,O,sJCLb,EAAuB,wBAAvB,EAAuD,yBAAvD,EAA8F,+B,wCCa/E,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAIIV,EAAAA,EAAAA,GAAc,IAHTW,EADT,EACER,MACUS,EAFZ,EAEER,SACcS,EAHhB,EAGER,aAEF,GAIIL,EAAAA,EAAAA,GAAc,IAHTc,EADT,EACEX,MACUY,EAFZ,EAEEX,SACcY,EAHhB,EAGEX,aAEIY,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IASpBC,EAAY,WAChBR,EAAa,IACbG,EAAgB,KAGlB,OACE,UAAClB,EAAA,EAAD,CAASC,MAAM,oCAAoCC,UAAU,EAA7D,WACE,kBAAMJ,UAAWC,EAAQyB,SAdH,SAAAC,GACxBA,EAAIC,iBAEJd,GAASe,EAAAA,EAAAA,IAAM,CAAEC,MAAOd,EAAWe,SAAUZ,KAC7CM,KAUE,WACE,SAACO,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,KAAK,QACLC,WAAW,EACXrC,UAAWC,EACXU,MAAOK,EACPsB,SAAUpB,KAEZ,SAACc,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRC,KAAK,WACLG,UAAQ,EACRvC,UAAWC,EACXU,MAAOQ,EACPmB,SAAUjB,KAEZ,SAACmB,EAAA,EAAD,CACEL,QAAQ,YACRC,KAAK,SACLK,UAAWzB,GAAaG,EAAauB,OAAS,EAC9C1C,UAAWC,EACX0C,SAAS,SAACC,EAAA,EAAD,IALX,uBAUDtB,IACC,SAACuB,EAAA,EAAD,CAAOC,GAAI,CAAEC,MAAO,QAASC,OAAQ,UAAYC,QAAS,EAA1D,UACE,SAACC,EAAA,EAAD,CACEC,SAAS,QACThB,QAAQ,WACRiB,QAAS,WACPtC,GAASuC,EAAAA,EAAAA,OAJb,SAOG/B","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","webpack://goit-react-hw-08-phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","hooks/useFormFields.js","webpack://goit-react-hw-08-phonebook/./src/views/LogInView/LogInView.module.css?d6ee","views/LogInView/LogInView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import React from 'react';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container';\nimport s from './Section.module.css';\n\nexport default function Section({ title, isHidden, children }) {\n  return (\n    <section className={s.section}>\n      <Container>\n        <h1 className={isHidden ? 'sectionTitleIsHidden' : 'sectionTitle'}>\n          {title}\n        </h1>\n        {children}\n      </Container>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  isHidden: PropTypes.bool.isRequired,\n};\n","import { useState } from 'react';\n\nexport default function useFormFields(initialVal) {\n  const [state, setState] = useState(initialVal);\n\n  const handleChange = ({ target: { value } }) => {\n    setState(value);\n  };\n\n  return { state, setState, handleChange };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LogInView_form__1V3ky\",\"input\":\"LogInView_input__3+3pd\",\"registerBtn\":\"LogInView_registerBtn__r16iL\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport Section from 'components/Section';\nimport useFormFields from 'hooks/useFormFields';\nimport { logIn } from 'redux/auth/authOperations';\nimport { getError } from 'redux/auth/authSelectors';\nimport s from './LogInView.module.css';\n\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport { resetError } from 'redux/auth/authActions';\n\nexport default function LogInView() {\n  const dispatch = useDispatch();\n  const {\n    state: userEmail,\n    setState: setUserEmail,\n    handleChange: handleUserEmailChange,\n  } = useFormFields('');\n  const {\n    state: userPassword,\n    setState: setUserPassword,\n    handleChange: handleUserPasswordChange,\n  } = useFormFields('');\n  const error = useSelector(getError);\n\n  const handleLogInSubmit = evt => {\n    evt.preventDefault();\n\n    dispatch(logIn({ email: userEmail, password: userPassword }));\n    formReset();\n  };\n\n  const formReset = () => {\n    setUserEmail('');\n    setUserPassword('');\n  };\n\n  return (\n    <Section title=\"Please sign in to access the site\" isHidden={false}>\n      <form className={s.form} onSubmit={handleLogInSubmit}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email:\"\n          variant=\"outlined\"\n          type=\"email\"\n          autoFocus={true}\n          className={s.input}\n          value={userEmail}\n          onChange={handleUserEmailChange}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Password:\"\n          variant=\"outlined\"\n          type=\"password\"\n          required\n          className={s.input}\n          value={userPassword}\n          onChange={handleUserPasswordChange}\n        />\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={!userEmail || userPassword.length < 7 ? true : false}\n          className={s.registerBtn}\n          endIcon={<SendIcon />}\n        >\n          Log In\n        </Button>\n      </form>\n      {error && (\n        <Stack sx={{ width: '400px', margin: '0 auto' }} spacing={2}>\n          <Alert\n            severity=\"error\"\n            variant=\"outlined\"\n            onClose={() => {\n              dispatch(resetError());\n            }}\n          >\n            {error}\n          </Alert>\n        </Stack>\n      )}\n    </Section>\n  );\n}\n"],"names":["Container","children","className","s","Section","title","isHidden","useFormFields","initialVal","useState","state","setState","handleChange","value","target","LogInView","dispatch","useDispatch","userEmail","setUserEmail","handleUserEmailChange","userPassword","setUserPassword","handleUserPasswordChange","error","useSelector","getError","formReset","onSubmit","evt","preventDefault","logIn","email","password","TextField","id","label","variant","type","autoFocus","onChange","required","Button","disabled","length","endIcon","Send","Stack","sx","width","margin","spacing","Alert","severity","onClose","resetError"],"sourceRoot":""}